name: "Release"

on:
  push:
    tags:
      - v*

jobs:
  test:
    name: "🧪 Test"
    runs-on: ubuntu-20.04
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: "1.5"
      - name: "💾 Cache artifacts"
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - name: "🏗️ Build package"
        uses: julia-actions/julia-buildpkg@v1
      - name: "🧪 Run tests"
        uses: julia-actions/julia-runtest@v1
      - name: "📊 Process test coverage"
        uses: julia-actions/julia-processcoverage@v1
      - name: "📤 Upload test coverage"
        uses: actions/upload-artifact@v2
        with:
          path: lcov.info
          name: Test coverage
      - name: "📤 Publish test coverage"
        uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    name: "📚 Documentation"
    runs-on: ubuntu-20.04
    needs:
      - test
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🧰 Install Julia"
        uses: julia-actions/setup-julia@v1
        with:
          version: "1.5"
      - name: "💾 Cache Julia artifacts"
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-docs-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-docs-${{ env.cache-name }}-
            ${{ runner.os }}-docs-
            ${{ runner.os }}-
      - name: "🏗️ Build Julia package"
        uses: julia-actions/julia-buildpkg@v1
      - name: "📚 Deploy documentation to GitHub Pages"
        uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
  release:
    name: "🚀 Release"
    runs-on: ubuntu-20.04
    needs:
      - test
    steps:
      - name: "📥 Check-out"
        uses: actions/checkout@v2
      - name: "🏷️ Get version tag"
        id: get-version
        run: echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
      - name: "✏️ Generate changelog"
        id: generate-changelog
        if: runner.os == 'Linux'
        uses: heinrichreimer/action-github-changelog-generator@v2
        with:
          onlyLastTag: "true"
          stripHeaders: "true"
          stripGeneratorNotice: "true"
      - name: "📤 Upload changelog"
        uses: actions/upload-artifact@v2
        with:
          path: ./CHANGELOG.md
          name: Changelog
      - name: "🚀 Create GitHub release"
        id: create-github-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get-version.outputs.tag }}
          body: ${{ steps.generate-changelog.outputs.changelog }}
          prerelease: false
